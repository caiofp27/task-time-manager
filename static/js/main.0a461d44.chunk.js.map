{"version":3,"sources":["components/new-task/newTask.component.jsx","components/tasks/tasks-display.component.jsx","App.js","index.js"],"names":["NewItem","state","newTaskText","updateTaskText","event","setState","target","value","handleClick","e","preventDefault","props","addTaskFunc","className","onSubmit","this","type","placeholder","onChange","maxLength","required","React","Component","TasksDisp","handleDelete","deleteTaskFunc","id","handleCheck","checkTaskFunc","handleUndo","undoTaskFunc","startTimer","startTimerFunc","pauseTimer","pauseTimerFunc","editTask","taskText","prompt","length","editTaskFunc","alert","time","msToTimeFunc","totalTime","iconsStartPause","iconEdit","completed","isOn","onClick","text","window","confirm","App","tasks","incrementer","addTask","date","Date","timeMs","getTime","newTask","uuidv4","startedDate","startedDateMs","timeTotal","taskCopy","slice","push","localStorage","setItem","JSON","stringify","deleteTask","filterTask","filter","task","filterIncrement","checkTask","incrementerCopy","item","map","clearInterval","func","undoTask","handleStartTimer","setInterval","running","handlePauseTimer","pause","msToTime","duration","seconds","Math","floor","minutes","hours","getItem","parse","completedTasks","t","incompleteTasks","sumHours","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a461d44.chunk.js","sourcesContent":["import React from \"react\";\nimport './newTask.styles.css';\n\nclass NewItem extends React.Component {\n  state = {\n    newTaskText: \"\"\n  }\n\n  updateTaskText = event => {\n    this.setState({\n      newTaskText: event.target.value\n    });\n  }\n\n  handleClick = e => {\n    e.preventDefault();\n    this.props.addTaskFunc(this.state.newTaskText);\n  }\n\n  render() {\n    return(\n      <section className=\"container\">\n        <form className=\"form-inline justify-content-center\" onSubmit={this.handleClick}>\n          <input \n            type=\"text\" \n            className=\"col-6 form-control mr-2\" \n            placeholder=\"new task\"\n            value={this.state.newTaskText}\n            onChange={this.updateTaskText}\n            maxLength=\"70\"\n            required\n          />\n          <button className=\"btn btn-sm button-custom\" type=\"submit\">\n            ADD\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default NewItem;","import React from 'react';\nimport './tasks-display.styles.css';\n\n\nclass TasksDisp extends React.Component {\n  handleDelete = e => {\n    e.preventDefault();\n    this.props.deleteTaskFunc(this.props.id);\n  }\n\n  handleCheck = e => {\n    e.preventDefault();\n    this.props.checkTaskFunc(this.props.id);\n  }\n\n  handleUndo = e => {\n    e.preventDefault();\n    this.props.undoTaskFunc(this.props.id);\n  }\n\n  startTimer = e => {\n    e.preventDefault();\n    this.props.startTimerFunc(this.props.id);\n  }\n\n  pauseTimer = e => {\n    e.preventDefault();\n    this.props.pauseTimerFunc(this.props.id);\n  }\n\n  editTask = e => {\n    e.preventDefault();\n    let taskText = prompt(\"Edit your task\");\n    if(taskText !== null && taskText.length > 0) {\n      this.props.editTaskFunc(this.props.id, taskText);\n    } else {\n      alert('Cannot be blank!');\n    }\n  }\n\n  render() {\n    let time = this.props.msToTimeFunc(this.props.totalTime),\n        iconsStartPause = '',\n        iconEdit = '';\n    if(!this.props.completed && !this.props.isOn) {\n      iconsStartPause = <i className='fas fa-play play-icon' onClick={this.startTimer} />;\n      iconEdit =  <i className='fas fa-edit edit-icon' onClick={this.editTask} />;\n    } else if(!this.props.completed && this.props.isOn) {\n      iconsStartPause = <i className='fas fa-pause pause-icon' onClick={this.pauseTimer} />;\n      iconEdit =  <i className='fas fa-edit edit-icon' onClick={this.editTask} />;\n    }\n    return(\n      <div className={`col-lg-3 col-md-4 col-sm-6 box ${this.props.completed ? \"completed-box\" : \"incompleted-box\"}`}>\n        <div className=\"card-text\">\n          <p>{this.props.text}</p>\n          <div className='divider' />\n          {this.props.completed ? \n            <i className=\"fas fa-undo undo-icon\" onClick={this.handleUndo} /> : \n            <i className=\"check-icon fas fa-check\" onClick={this.handleCheck} />\n          }\n          <p className='time'>{time}</p>\n          {iconsStartPause}{iconEdit}\n          <i className=\"fas fa-trash-alt trash-icon\" onClick={e => {window.confirm(\"Are you sure you wish to delete this item?\") && this.handleDelete(e)}} />\n        </div>\n      </div>\n    );\n  }\n} \n\nexport default TasksDisp;","import React from 'react';\nimport NewTask from './components/new-task/newTask.component';\nimport TasksDisp from './components/tasks/tasks-display.component';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends React.Component {\n  userData;\n  state = {\n    tasks: [],\n    incrementer: []\n  }\n\n  componentDidMount() {\n    const tasks = localStorage.getItem('tasks');\n    const incrementer = localStorage.getItem('incrementer');\n    if(tasks || incrementer) {\n      this.setState({\n        tasks: JSON.parse(tasks),\n        incrementer: JSON.parse(incrementer)\n      });\n    } else {\n      this.setState({\n        tasks: [],\n        incrementer: []\n      });\n    }\n  }\n\n  addTask = (taskText) => {\n    let date = new Date();\n    let timeMs = date.getTime();\n    const newTask = {\n      id: uuidv4(),\n      taskText: taskText,\n      completed: false,\n      isOn: false,\n      startedDate: date,\n      startedDateMs: timeMs,\n      timeTotal: 0\n    };\n    const taskCopy = this.state.tasks.slice();\n    taskCopy.push(newTask);\n    this.setState({\n      tasks: taskCopy\n    });\n    localStorage.setItem('tasks', JSON.stringify(taskCopy));\n  }\n\n  deleteTask = id => {\n    const filterTask = this.state.tasks.filter(task => {\n      return task.id !== id;\n    });\n    const filterIncrement = this.state.incrementer.filter(task => {\n      return task.id !== id;\n    })\n    this.setState({\n      tasks: filterTask,\n      incrementer: filterIncrement\n    });\n    localStorage.setItem('incrementer', JSON.stringify(filterIncrement));\n    localStorage.setItem('tasks', JSON.stringify(filterTask));\n  }\n\n  checkTask = id => {\n    const incrementerCopy = this.state.incrementer.filter(item => item.id !== id);\n    this.state.incrementer.map(item => {\n      if(item.id === id){\n        clearInterval(item.func);\n      }\n      return item;\n    });\n    const checkTask = this.state.tasks.map(task => {\n      if(task.id === id){\n        task.completed = true;\n        task.isOn = false;\n      }\n      return task;\n    });\n    this.setState({\n      tasks: checkTask,\n      incrementer: incrementerCopy\n    });\n    localStorage.setItem('incrementer', JSON.stringify(incrementerCopy))\n    localStorage.setItem('tasks', JSON.stringify(checkTask));\n  }\n\n  undoTask = id => {\n    const undoTask = this.state.tasks.map(task => {\n      if(task.id === id){\n        task.completed = false;\n        task.isOn = false;\n      }\n      return task;\n    });\n    this.setState({\n      tasks: undoTask\n    });\n    localStorage.setItem('tasks', JSON.stringify(undoTask));\n  }\n\n  handleStartTimer = id => {\n    const incrementer = {\n      id: id,\n      func: setInterval(() => {\n        const running = this.state.tasks.map(task => {\n          if(task.id === id) {\n            task.isOn = true;\n            task.timeTotal += 1000;\n          } \n            return task;\n          });\n          localStorage.setItem('tasks', JSON.stringify(running));\n          this.setState({\n            tasks: running\n          });  \n      },1000)\n    }\n    const incrementerCopy = this.state.incrementer.slice();\n    incrementerCopy.push(incrementer);\n    this.setState({\n      incrementer: incrementerCopy\n    });\n    localStorage.setItem('incrementer', JSON.stringify(incrementerCopy));\n  }\n\n  handlePauseTimer = id => {\n    const incrementerCopy = this.state.incrementer.filter(item => item.id !== id);\n    this.state.incrementer.map(item => {\n      if(item.id === id){\n        clearInterval(item.func);\n      }\n      return item;\n    });\n    const pause = this.state.tasks.map(task => {\n      if(task.id === id) {\n        task.isOn = false;\n      }\n      return task;\n    });\n    this.setState({\n      tasks: pause,\n      incrementer: incrementerCopy\n    });\n    localStorage.setItem('tasks', JSON.stringify(pause));\n\n  }\n\n  editTask = (id, taskText) => {\n    const taskCopy = this.state.tasks.map(item => {\n      if(item.id === id){\n        item.taskText =  taskText;\n      }\n      return item;\n    });\n    this.setState({\n      tasks: taskCopy\n    });\n    localStorage.setItem('tasks', JSON.stringify(taskCopy));\n  }\n\n  msToTime = duration => {\n    let seconds = Math.floor((duration / 1000) % 60),\n        minutes = Math.floor((duration / (1000 * 60)) % 60),\n        hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n    hours = (hours < 10) ? \"0\" + hours : hours;\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\n    return hours+\":\"+minutes+\":\"+seconds;\n  }\n\n  render() {\n    const completedTasks = this.state.tasks.filter(t => t.completed === true),\n          incompleteTasks = this.state.tasks.filter(t => t.completed === false);\n    let sumHours = 0;\n    completedTasks.map(item => sumHours += item.timeTotal);\n    return(\n      <section>\n        <div className=\"header-background\">\n          <div className=\"title-background\">\n            <h1 className=\"title\">Task & Time Manager</h1>\n          </div>\n        </div>\n        <div className=\"container\">\n          <NewTask addTaskFunc={this.addTask} />\n          <section className=\"row-container\">\n            <div className=\"row row-box\">\n              {incompleteTasks.map(item => {\n              return <TasksDisp \n                key={item.id} \n                text={item.taskText} \n                isOn={item.isOn} \n                totalTime={item.timeTotal} \n                completed={item.completed} \n                deleteTaskFunc={this.deleteTask} \n                checkTaskFunc={this.checkTask} \n                undoTaskFunc={this.undoTask} \n                startTimerFunc={this.handleStartTimer} \n                pauseTimerFunc={this.handlePauseTimer} \n                editTaskFunc={this.editTask} \n                msToTimeFunc={this.msToTime} \n                id={item.id} \n              />})}\n            </div>\n          </section>\n          <div className=\"divider-body\" />\n          <section className=\"row-container\">\n          <div className=\"title-container\">\n            <h3 className=\"title-completed\">Done Tasks </h3>\n            <div className=\"hours\">Time Worked: {this.msToTime(sumHours)}</div>\n          </div>         \n            <div className='row row-box'>\n              {completedTasks.map(item => {\n              return <TasksDisp \n                key={item.id} \n                text={item.taskText} \n                isOn={item.isOn} \n                totalTime={item.timeTotal} \n                completed={item.completed} \n                deleteTaskFunc={this.deleteTask} \n                checkTaskFunc={this.checkTask} \n                undoTaskFunc={this.undoTask} \n                startTimerFunc={this.handleStartTimer} \n                pauseTimerFunc={this.handlePauseTimer} \n                msToTimeFunc={this.msToTime} \n                id={item.id} \n              />})}\n            </div>\n          </section>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}